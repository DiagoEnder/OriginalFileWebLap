// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OriginalFileWebLap.Models;

#nullable disable

namespace OriginalFileWebLap.Migrations
{
    [DbContext(typeof(LapStoreContext))]
    [Migration("20230801170152_MyFirstDatabase")]
    partial class MyFirstDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OriginalFileWebLap.Models.AdminAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AdminAccounts");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Branchs");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.CPU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CpuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CPUs");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPro")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("NamePro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.Property<string>("imgPro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("NameUSer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProduct");

                    b.HasIndex("IdUser");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.HDH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HDHName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("HDHs");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IdBranch")
                        .HasColumnType("int");

                    b.Property<int>("IdCpu")
                        .HasColumnType("int");

                    b.Property<int>("IdHdh")
                        .HasColumnType("int");

                    b.Property<int>("IdRam")
                        .HasColumnType("int");

                    b.Property<int>("IdRquire")
                        .HasColumnType("int");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("IdBranch");

                    b.HasIndex("IdCpu");

                    b.HasIndex("IdHdh");

                    b.HasIndex("IdRam");

                    b.HasIndex("IdRquire");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Ram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Rams");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Requirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ReName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Requirements");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Cart", b =>
                {
                    b.HasOne("OriginalFileWebLap.Models.UserAccount", "UserAccount")
                        .WithMany()
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Comment", b =>
                {
                    b.HasOne("OriginalFileWebLap.Models.Product", "Product")
                        .WithMany("comments")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OriginalFileWebLap.Models.UserAccount", "User")
                        .WithMany("Comments")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Product", b =>
                {
                    b.HasOne("OriginalFileWebLap.Models.Cart", null)
                        .WithMany("products")
                        .HasForeignKey("CartId");

                    b.HasOne("OriginalFileWebLap.Models.Branch", "Branch")
                        .WithMany("products")
                        .HasForeignKey("IdBranch")
                        .IsRequired()
                        .HasConstraintName("FK_Product_Branch");

                    b.HasOne("OriginalFileWebLap.Models.CPU", "CPU")
                        .WithMany("products")
                        .HasForeignKey("IdCpu")
                        .IsRequired()
                        .HasConstraintName("FK_Product_CPU");

                    b.HasOne("OriginalFileWebLap.Models.HDH", "HDH")
                        .WithMany("products")
                        .HasForeignKey("IdHdh")
                        .IsRequired()
                        .HasConstraintName("FK_Product_HDH");

                    b.HasOne("OriginalFileWebLap.Models.Ram", "Ram")
                        .WithMany("products")
                        .HasForeignKey("IdRam")
                        .IsRequired()
                        .HasConstraintName("FK_Product_Ram");

                    b.HasOne("OriginalFileWebLap.Models.Requirement", "Requirement")
                        .WithMany("products")
                        .HasForeignKey("IdRquire")
                        .IsRequired()
                        .HasConstraintName("FK_Product_Requirement");

                    b.Navigation("Branch");

                    b.Navigation("CPU");

                    b.Navigation("HDH");

                    b.Navigation("Ram");

                    b.Navigation("Requirement");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Branch", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.CPU", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Cart", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.HDH", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Product", b =>
                {
                    b.Navigation("comments");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Ram", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.Requirement", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("OriginalFileWebLap.Models.UserAccount", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
